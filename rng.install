<?php

/**
 * @file
 * Contains install and update functions for RNG.
 */

use Drupal\Core\Entity\Entity\EntityFormMode;
use Drupal\rng\EventManagerInterface;

/**
 * Add form modes and displays for event settings.
 */
function rng_update_8001() {
  $field_weights = [
    EventManagerInterface::FIELD_STATUS,
    EventManagerInterface::FIELD_ALLOW_DUPLICATE_REGISTRANTS,
    EventManagerInterface::FIELD_CAPACITY,
    EventManagerInterface::FIELD_EMAIL_REPLY_TO,
    EventManagerInterface::FIELD_REGISTRATION_TYPE,
    EventManagerInterface::FIELD_REGISTRATION_GROUPS,
  ];

  /** @var \Drupal\rng\EventManagerInterface $event_manager */
  $event_manager = \Drupal::service('rng.event_manager');
  foreach ($event_manager->getEventTypes() as $entity_type => $bundles) {
    EntityFormMode::create([
      'id' => $entity_type . '.rng_event',
      'targetEntityType' => $entity_type,
      'label' => 'Event Settings',
      'status' => TRUE,
    ])->save();

    foreach (array_keys($bundles) as $bundle) {
      $display = entity_get_form_display($entity_type, $bundle, 'rng_event');
      foreach (array_keys($display->getComponents()) as $name) {
        if (!in_array($name, $field_weights)) {
          $display->removeComponent($name);
        }
      }

      module_load_include('inc', 'rng', 'rng.field.defaults');
      foreach ($field_weights as $weight => $name) {
        rng_add_event_form_display_defaults($display, $name);
        if (in_array($name, $field_weights)) {
          $component = $display->getComponent($name);
          $component['weight'] = $weight;
          $display->setComponent($name, $component);
        }
      }

      $display->save();
    }
  }
}